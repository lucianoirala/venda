unit TestVenda.Model;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Venda.Model.Venda, Vcl.StdCtrls, Generics.Collections,
  Venda.Model.Interfaces;

type
  // Test methods for class TModelVenda

  TestTModelVenda = class(TTestCase)
  strict private
    FModelVenda: iVenda;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSetCodVenda;
    procedure TestSetNomeCliente;
    procedure TestAdicionar;
    procedure TestGetDataEntrega;
    procedure TestGetQtdItens;
    procedure TestGetCodVenda;
  end;

implementation

uses
  Venda.Model.VendaItem;

procedure TestTModelVenda.SetUp;
begin
  FModelVenda := TModelVenda.New;
end;

procedure TestTModelVenda.TearDown;
begin

end;

procedure TestTModelVenda.TestSetCodVenda;
var
  ReturnValue: iVenda;
  Value: Integer;
begin
  Value := 1;
  ReturnValue := FModelVenda.SetCodVenda(Value);
  CheckEquals(1, ReturnValue.GetCodVenda, 'A função SetCodVenda Falhou!');
end;

procedure TestTModelVenda.TestSetNomeCliente;
var
  ReturnValue: iVenda;
  Value: string;
begin
  Value := 'Cliente';
  ReturnValue := FModelVenda.SetNomeCliente(Value);
  CheckEquals('Cliente', ReturnValue.GetNomeCliente, 'A função SetNomeCliente Falhou!');
end;

procedure TestTModelVenda.TestAdicionar;
var
  ReturnValue: iVenda;
  Value: iVendaItem;
begin
  Value := TModelVendaItem.New;
  Value.SetDescricao('Produto 1')
       .SetPreco('10,52');
  ReturnValue := FModelVenda.Adicionar(Value);
  CheckEquals('Produto 1', ReturnValue.GetItem(0).GetDescricao, 'A função SetDescricao Falhou!');
  CheckEquals(10.52, ReturnValue.GetItem(0).GetPreco, 'A função SetPreco Falhou!');
end;

procedure TestTModelVenda.TestGetDataEntrega;
var
  ReturnValue: string;
begin
  ReturnValue := FModelVenda.GetDataEntrega;
  CheckEquals('16/11/2021', ReturnValue, 'A função GetDataEntrega Falhou!');
end;

procedure TestTModelVenda.TestGetQtdItens;
var
  ReturnValue: Integer;
  lItem: iVendaItem;
begin
  lItem := TModelVendaItem.New;
  FModelVenda.Adicionar(lItem);
  ReturnValue := FModelVenda.GetQtdItens;
  CheckEquals(1, ReturnValue, 'A função GetQtdItens Falhou!');
end;

procedure TestTModelVenda.TestGetCodVenda;
var
  ReturnValue: Integer;
begin
  FModelVenda.SetCodVenda(1);
  ReturnValue := FModelVenda.GetCodVenda;
  CheckEquals(1, ReturnValue, 'A função GetCodVenda Falhou!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTModelVenda.Suite);
end.

